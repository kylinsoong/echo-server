# ttcp global config file

#
# COMMON OPTIONS
#

# Specify theInternet Protocol Version
#   value 4 for using IPv4
#   value 6 for using IPv6
ip_version=4

# transport protocol, allowed values are tcp, udp
protocol=tcp

# port number to send to or listen at (default 5001)
port=5001

# whether to use silent mode, default 0, set to 1 to enable silent mode 
#   slient = 1 with recv, sink (discard) all data from network
#   slient = 1 with trans, source a pattern to network
silent=0

# length of bufs read from or written to network (default 8192)
buffer_length=8192

# align the start of buffers to this modulus (default 16384)
bufalign=

# start buffers at this offset from the modulus (default 0)
bufoffset=

# verbose: print more statistics 
verbose=1

# format for rate: k,K = kilo{bit,byte}; m,M = mega; g,G = giga
format=g

# set SO_DEBUG socket option, default 0
ttcp.sock.debug=0

# set socket buffer size (if supported)
# if trans, will set as send buffer size
# if recv,  will set as receive buffer size  
ttcp.sock.buf.size=

# enables keep connections alive
ttcp.sock.keepalive=

# The number of seconds a connection needs to be idle before TCP begins sending out keep-alive probes.
# Keep-alives are only sent when the SO_KEEPALIVE socket option is enabled. The default value is
# 7200 seconds (2 hours). An idle connection is terminated after approximately an additional 11 minutes 
# (9 probes an interval of 75 seconds apart) when keep-alive is enabled. 
ttcp.tcp.tcp_keepalive_time=7200

# The number of seconds between TCP keep-alive probes.
ttcp.tcp.tcp_keepalive_intvl=75

# The maximum number of TCP keep-alive probes to send before giving up and killing the connection if
# no response is obtained from the other end.
ttcp.tcp.tcp_keepalive_probes=9

#
# OPTIONS SPECIFIC TO RECV
#

# for silent, only output full blocks as specified by -l (for TAR)
blocks_output=0

# "touch": access each byte as it's read
touch=0

#Specify the network interface (e.g. eth0) to use
device=

#
# OPTIONS SPECIFIC TO TRANS
#

# number of source bufs written to network (default 2048)
nbuf=2048

# don't buffer TCP writes (sets TCP_NODELAY socket option)
# set to 1 ensble TCP_NODELAY
ttcp.tcp.nodelay=0

# number of microseconds to wait between each write
write_interval=0

# port number for client source port
source_port=
